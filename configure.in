dnl Process this file with autoconf to produce a configure script.
AC_INIT(INSTALL)
AM_INIT_AUTOMAKE(gale,0.19)
AM_CONFIG_HEADER(include/gale/config.h:config.h.in)
AC_CANONICAL_HOST

AC_ARG_ENABLE(gzgw,
[  --enable-gzgw           Build the Zephyr gateway (requires Zephyr)],
[case "${enableval}" in
  yes) build_gzgw=true ;;
  no)  build_gzgw=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-gzgw) ;;
esac],[build_gzgw=false])
AM_CONDITIONAL(BUILD_GZGW,test x$build_gzgw = xtrue)

AC_ARG_ENABLE(glog,
[  --enable-glog           Build the Gale logger (requires libdb > 2.3.0)],
[case "${enableval}" in
  yes) build_glog=true ;;
  no)  build_glog=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-glog) ;;
esac],[build_glog=false])
AM_CONDITIONAL(BUILD_GLOG,test x$build_glog = xtrue)

AC_ARG_WITH(socks,
[  --with-socks            Use SOCKS firewall proxy (requires libsocks)],
[case "${withval}" in
  yes) use_socks=true ;;
  no)  use_socks=false ;;
  *) AC_MSG_ERROR(bad value ${withval} for --with-socks) ;;
esac],[use_socks=false])

no_wacky_libs=""

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_YACC

dnl System type checks.
case "$host" in
  *-sgi-irix6*)
    if test -n "$LPATH" ; then
      LDFLAGS="-Wl,-rpath,$LPATH $LDFLAGS"
    fi
    no_wacky_libs=yes
    AC_DEFINE(OS_IRIX)
    ;;
  *-hp-hpux*)
    AC_DEFINE(OS_HPUX)
    ;;
  *-*-solaris2*)
    AC_DEFINE(OS_SOLARIS)
    ;;
  *-*-*bsd*)
    AC_DEFINE(OS_BSD)
    ;;
esac

dnl Checks for libraries.
if test -z "$no_wacky_libs" ; then
  AC_CHECK_LIB(nsl,main)
  AC_CHECK_LIB(socket,socket)
fi
AC_CHECK_LIB(termcap,tgetent)
AC_CHECK_LIB(dl,dlopen,[
  DL_LIBS="-ldl"
  AC_DEFINE(HAVE_LIBDL)])
AC_CHECK_LIB(readline,readline,[
  READLINE_LIBS="-lreadline"
  AC_DEFINE(HAVE_LIBREADLINE)])

save_flags="$CPPFLAGS"
CPPFLAGS="-Dmain=cgiMain $CPPFLAGS"
AC_CHECK_LIB(cgic,cgiFormString)
CPPFLAGS="$save_flags"

if test x$use_socks = xtrue ; then
AC_CHECK_LIB(socks,SOCKSinit,[
  LIBS="$LIBS -lsocks"
  AC_CHECK_LIB(resolv,res_query)
  AC_DEFINE(HAVE_SOCKS) 
],[
  AC_MSG_ERROR(cannot find SOCKS library)
])
fi

if test x$build_gzgw = xtrue ; then
AC_CHECK_LIB(zephyr,ZInitialize,[
  ZEPHYR_LIBS="-lzephyr -lcom_err"
  AC_CHECK_LIB(krb,tf_get_pname,[ZEPHYR_LIBS="-lkrb $ZEPHYR_LIBS"])
  AC_CHECK_LIB(des,des_key_sched,[ZEPHYR_LIBS="-ldes $ZEPHYR_LIBS"])
],[
  AC_MSG_ERROR(cannot find library to build gzgw as specified)
],-lcom_err)
fi

if test x$build_glog = xtrue ; then
AC_MSG_CHECKING([for suitable version of sleepycat db])
save_LIBS="$LIBS"
LIBS="-ldb $LIBS"
AC_TRY_LINK([
#include <db.h>
],[
  DB_ENV dbenv;
  dbenv.db_errcall;
],[
  DB_LIBS="-ldb"  
  AC_MSG_RESULT(yes)
],[
  AC_MSG_RESULT(no)
  AC_MSG_ERROR(cannot find library to build glog as specified)
])
LIBS="$save_LIBS"
fi

AC_MSG_CHECKING([for local copy of RSAREF source])
if test -f "${srcdir}/rsaref/source/rsa.c"; then
  AC_MSG_RESULT(yes)
  CPPFLAGS="$CPPFLAGS -I\${top_srcdir}/rsaref/source"
  LDFLAGS="-L\${top_builddir}/rsaref/source $LDFLAGS"
  build_rsaref=true
else
  AC_MSG_RESULT(no)
  AC_CHECK_LIB(rsaref,R_RandomInit,[:],[
    AC_MSG_ERROR(cannot find RSAREF library, see INSTALL directions)
  ])
fi

AC_MSG_CHECKING([for local copy of Boehm GC])
if test -f "${srcdir}/gc/alloc.c"; then
  AC_MSG_RESULT(yes)
  CPPFLAGS="$CPPFLAGS -I\${top_srcdir}/gc/include"
  LDFLAGS="-L\${top_builddir}/gc $LDFLAGS"
  build_gc=true
else
  AC_MSG_RESULT(no)
  AC_CHECK_LIB(gc,GC_malloc,[:],[
    AC_MSG_ERROR(cannot find Boehm GC library, see INSTALL directions)
  ])
fi

dnl Checks for header files.
AC_CHECK_HEADERS(sys/bitypes.h curses.h term.h dlfcn.h readline/readline.h)

if test ! -f "${srcdir}/rsaref/source/rsaref.h"; then
  AC_CHECK_HEADERS(rsaref.h,,[
    AC_MSG_ERROR(cannot find RSAREF headers, see INSTALL directions)
  ])
fi

if test ! -f "${srcdir}/gc/include/gc.h"; then
  AC_CHECK_HEADERS(gc.h,,[
    AC_MSG_ERROR(cannot find Boehm GC headers, see INSTALL directions)
  ])
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(long)

dnl Checks for library functions.

dnl Configurations that would break tests.
LIBS="-lgale -lgauth -lgmisc -lgc -lrsaref $LIBS"
LDFLAGS="-L\${top_builddir}/lib -L\${top_builddir}/auth $LDFLAGS"
LDFLAGS="-L\${top_builddir}/misc $LDFLAGS"
CPPFLAGS="-I\${top_srcdir}/include -I\${top_builddir}/include $CPPFLAGS"
CPPFLAGS="-DGALE_SYS_DIR=\\\"${sysconfdir}/gale\\\" $CPPFLAGS"

AC_SUBST(DB_LIBS)
AC_SUBST(ZEPHYR_LIBS)
AC_SUBST(READLINE_LIBS)
AC_SUBST(DL_LIBS)

AM_CONDITIONAL(BUILD_GZGW,test x$build_gzgw = xtrue)
AM_CONDITIONAL(BUILD_RSAREF,test x$build_rsaref = xtrue)
AM_CONDITIONAL(BUILD_GC,test x$build_gc = xtrue)
AM_CONDITIONAL(BUILD_GLOG,test x$build_glog = xtrue)

AC_OUTPUT(
	Makefile 
	gc/makefile
	gc/include/Makefile
	lib/Makefile 
	auth/Makefile 
	misc/Makefile
	gsub/Makefile
	gzgw/Makefile
	glog/Makefile
	gsend/Makefile
	gkeys/Makefile
	gwatch/Makefile
	server/Makefile
	gdomain/Makefile
	include/Makefile 
	include/gale/Makefile
	rsaref/Makefile
	rsaref/source/Makefile
)
